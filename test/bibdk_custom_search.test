<?php
class BibdkCustomSearchUnitTestCase extends DrupalUnitTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Custom Search Unit Test',
      'description' => 'Bibdk Custom Unit test.',
      'group' => 'Bibliotek.dk  - Custom Search',
    );
  }

  public function test_bibdk_custom_search_is_advanced_search_expanded() {

    module_load_include('module', 'bibdk_custom_search', 'bibdk_custom_search');

    // Test empty query
    $get = array();
    $result = _bibdk_custom_search_is_advanced_search_expanded($get);
    $this->assertFalse($result, 'Do not expand if query is empty');

    // Test default query
    $get = array(
      'qe' => array(
        'year.op' => array('year_eq'),
      ),
      'q' => 'bibdk_frontpage',
    );

    $result = _bibdk_custom_search_is_advanced_search_expanded($get);
    $this->assertTrue($result, 'Do not expand when on frontpage and default search');

    // Test advanced query
    $get = array(
      'qe' => array(
        'year.op' => array('year_eq'),
        'work' => 'test',
      ),
      'q' => 'bibdk_frontpage',
    );
    $result = _bibdk_custom_search_is_advanced_search_expanded($get);
    $this->assertFalse($result, 'Expand if advanced elements have been set');
  }

}



class BibdkCustomSearchTestCase extends DrupalWebTestCase {

  protected $privileged_user;

  public static function getInfo() {
    return array(
      'name' => 'Custom Search Web Test',
      'description' => 'Bibdk Custom Search test.',
      'group' => 'Bibliotek.dk  - Custom Search',
    );
  }

  public function setUp() {
    // $this->profile = 'minimal';
    parent::setUp('bibdk_custom_search', 'search', 'uuid', 'ting_openformat');
    variable_set('ting_search_url', 'http://lakiseks.dbc.dk/openbibdk/0.5/');
    variable_set('bibdk_provider_security_code', 'testhest');
    variable_set('search_active_modules', array('ting_openformat' => 'ting_openformat'));
    variable_set('search_default_module', 'ting_openformat');
    user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content', 'search content'));
    menu_rebuild();
  }


  public function testRunner() {
    global $_bibdk_custom_search_value_title;
    global $_bibdk_custom_search_page_path;
    global $_bibdk_custom_search_v_uuid;
    global $_bibdk_custom_search_page_menu_title;
    global $_bibdk_custom_search_page_title;

    // Create and log in our privileged user.
    $this->privileged_user = $this->drupalCreateUser(array(
      'administer bibdk custom search pages',
      'administer search',
      'administer blocks',
      'search content',
    ));
    $this->drupalLogin($this->privileged_user);
    $this->_testParseFormFunction();
    $this->_testBibdkCustomSearchCreatePage();
    $this->_testBibdkCustomSearchDisable();
    $this->_testBibdkCustomSearchResult();
    return TRUE;

  }

  private function _testParseFormFunction() {
    $elements = array(
      '81335603-ae1d-5de4-25c7-a1538e7ad8f5' => array(
        'element_label' => 'Forfatter',
        'description' => 'fx nesbo',
        'help_text' => 'Sog forfatter:
Skriv den eller de dele af navnet, du er sikker paa. Kombiner evt. med et ord fra titlen - det skal skrives i titelboksen.',
        'region' => 'main',
        'access_key' => 'f',
        'tab_index' => '0',
        'values' => array(
          '1150ebb6-8e38-27d4-b929-840f71d17137' => array(
            'value_title' => 'ophav',
            'value_type' => 'textfield',
            'search_code' => 'dkcclterm.fo',
            'default_value' => '',
            'options' => array(
              'nnj' => array(
                'label' => 'fjhfjhgfjh',
                'v_uuid' => '1150ebb6-8e38-27d4-b929-840f71d17137',
              )
            )
          )
        )
      )
    );

    $page = array(
      'pid' => '5',
      'p_uuid' => 'd3099a71-b1b6-f5c4-4170-6b8593ad446b',
      'page_title' => 'Alle materialer',
      'page_path' => 'bibdk_frontpage',
      'menu_title' => 'Alle materialer',
      'delimiter' => NULL,
      'expand' => '1',
      'sort' => '-10',
    );

    $expected_result = array(
      'bibdk_custom_search_element_81335603-ae1d-5de4-25c7-a1538e7ad8f5' =>
      array(
        '#type' => 'fieldset',
        '#collapsible' => FALSE,
        '#collapsed' => FALSE,
        '#tree' => TRUE,
        '#region' => 'main',
        '#theme' => 'bibdk_search_element',
        '#title_text' => 'Forfatter',
        '#description_text' => 'fx nesbo',
        '#help_text' => 'Sog forfatter:
Skriv den eller de dele af navnet, du er sikker paa. Kombiner evt. med et ord fra titlen - det skal skrives i titelboksen.',
        '#attributes' =>
        array(
          'class' =>
          array(
            0 => 'forfatter',
            1 => 'element-wrapper',
          ),
        ),
        '1150ebb6-8e38-27d4-b929-840f71d17137' =>
        array(
          '#type' => 'textfield',
          '#title' => 'ophav',
          '#title_display' => 'invisible',
          '#default_value' => '',
          '#disabled' => 0,
          '#attributes' =>
          array(
            'tabindex' =>
            array(
              0 => '0',
            ),
            'accesskey' =>
            array(
              0 => 'f',
            ),
            'data-term' =>
            array(
              0 => '1150ebb6-8e38-27d4-b929-840f71d17137',
            ),
          ),
          '#tree' => FALSE,
          '#size' => 30,
          '#maxlength' => 64,
        ),
      ),
      '#collapsed' => '1',
      '#main_search_name' => 'Alle materialer',
    );

    $result = _bibdk_custom_search_advanced_fields_parse_form($elements, $page);

    $this->assertEqual($result, $expected_result, 'Render array correctly parsed');
  }

  private function _testBibdkCustomSearchCreatePage() {
    global $_bibdk_custom_search_value_title;
    global $_bibdk_custom_search_page_path;
    global $_bibdk_custom_search_v_uuid;
    global $_bibdk_custom_search_page_menu_title;
    global $_bibdk_custom_search_page_title;

    // Test creation of a custom search page.
    $edit = array();
    $_bibdk_custom_search_page_title = $edit['bibdk_custom_search[0][page_title]'] = $this->randomName(8);
    $this->drupalPost('admin/config/search/bibdk_custom_search', $edit, 'Save');
    // US1085-test
    // $this->assertText('The page "' . $_bibdk_custom_search_page_title . '" have been created');

    // Test creation of a custom search element.
    $edit = array();
    $element_title = $edit['bibdk_custom_search_page_elements[0][element_title]'] = $this->randomName(8);
    $this->drupalPost('admin/config/search/bibdk_custom_search/elements', $edit, 'Save');
    // US1085-test
    // $this->assertText('The element "' . $element_title . '" have been created.');

    // Test creation of a custom search value.
    $edit = array();
    $_bibdk_custom_search_value_title = $edit['bibdk_custom_search[0][value_title]'] = $this->randomName(8);
    $this->drupalPost('admin/config/search/bibdk_custom_search/values', $edit, 'Save');
    // US1085-test
    // $this->assertText('The value "' . $_bibdk_custom_search_value_title . '" have been created.');

    // Test editing a custom search value.
    //$this->drupalPost('admin/config/search/bibdk_custom_search/values', null, 'edit');
    $this->clickLink('edit');
    $edit = array();
    $edit['element_value[value_type]'] = 'textfield';
    $edit['element_value[search_code]'] = $this->randomName(8);
    $this->drupalPost(NULL, $edit, 'Save');
    $this->assertFieldByName(
      'element_value[value_type]',
      $edit['element_value[value_type]'],
      format_string('The value "@value_title" have been set to a type "@type".', array('@value_title' => $_bibdk_custom_search_value_title, '@type' => $edit['element_value[value_type]']))
    );
    $this->assertFieldByName(
      'element_value[search_code]',
      $edit['element_value[search_code]'],
      format_string('The value "@value_title" have been assigned a search code "@code".', array('@value_title' => $_bibdk_custom_search_value_title, '@code' => $edit['element_value[search_code]']))
    );

    // Test editing a custom search element.
    $value = db_select('bibdk_custom_search_elements', 't')->fields('t', array('e_uuid'))->condition('eid', 1, '=')->execute()->fetchAssoc();
    $e_uuid = $value['e_uuid'];

    $this->drupalGet('admin/config/search/bibdk_custom_search/elements');

    $this->clickLink('edit');
    $edit = array();
    $element_label = $edit['bibdk_custom_search_page_element[element_label]'] = $this->randomName(8);
    $edit['bibdk_custom_search_page_element[access_key]'] = $this->randomName(1);
    $edit['bibdk_custom_search_page_element[tab_index]'] = rand(0, 100);
    $element_description = $edit['bibdk_custom_search_page_element[description]'] = $this->randomName(40);
    $edit['bibdk_custom_search_page_element[help_text]'] = $this->randomName(10);
    $this->drupalPost(null, $edit, 'Save');
    $this->assertFieldByName(
      'bibdk_custom_search_page_element[element_label]',
      $edit['bibdk_custom_search_page_element[element_label]'],
      format_string('The element "@element_title" have been assigned a label "@val".', array('@element_title' => $element_title, '@val' => $edit['bibdk_custom_search_page_element[element_label]']))
    );
    $this->assertFieldByName(
      'bibdk_custom_search_page_element[access_key]',
      $edit['bibdk_custom_search_page_element[access_key]'],
      format_string('The element "@element_title" have been assigned an accesskey "@val".', array('@element_title' => $element_title, '@val' => $edit['bibdk_custom_search_page_element[access_key]']))
    );
    $this->assertFieldByName(
      'bibdk_custom_search_page_element[tab_index]',
      $edit['bibdk_custom_search_page_element[tab_index]'],
      format_string('The element "@element_title" have been assigned a tabindex "@val".', array('@element_title' => $element_title, '@val' => $edit['bibdk_custom_search_page_element[tab_index]']))
    );
    $this->assertFieldByName(
      'bibdk_custom_search_page_element[description]',
      $edit['bibdk_custom_search_page_element[description]'],
      format_string('The element "@element_title" have been assigned a description "@val".', array('@element_title' => $element_title, '@val' => substr($edit['bibdk_custom_search_page_element[description]'], 0, 40) . '[...]'))
    );
    $this->assertFieldByName(
      'bibdk_custom_search_page_element[help_text]',
      $edit['bibdk_custom_search_page_element[help_text]'],
      format_string('The element "@element_title" have been assigned a helptext "@val".', array('@element_title' => $element_title, '@val' => substr($edit['bibdk_custom_search_page_element[help_text]'], 0, 40) . '[...]'))
    );

    // Test adding a value to a custom search element.
    $value = db_select('bibdk_custom_search_values', 'v')->fields('v', array('v_uuid'))->condition('vid', 1, '=')->execute()->fetchAssoc();
    $_bibdk_custom_search_v_uuid = $value['v_uuid'];
    $edit = array();
    $edit['bibdk_custom_search_page_element_values[0][v_uuid]'] = $_bibdk_custom_search_v_uuid;
    //$this->drupalPost(null, $edit, 'Save');
    $this->drupalPost('admin/config/search/bibdk_custom_search/elements/' . $e_uuid . '/edit', $edit, 'Save');
    $this->assertText($_bibdk_custom_search_value_title, format_string('The value "@value_title" was found.', array('@value_title' => $_bibdk_custom_search_value_title)));
    $this->assertLinkByHref(
      'admin/config/search/bibdk_custom_search/values/' . $_bibdk_custom_search_v_uuid . '/edit'
    );
    $value = db_select('bibdk_custom_search_map_values', 'v')->fields('v', array('mv_uuid'))->condition('mid', 1, '=')->execute()->fetchAssoc();
    $mv_uuid = $value['mv_uuid'];

    $this->assertLinkByHref(
      'admin/config/search/bibdk_custom_search/elements/' . $e_uuid . '/remove_value/' . $mv_uuid
    );

    // Test editing a custom search page.
    $value = db_select('bibdk_custom_search', 't')->fields('t', array('p_uuid'))->condition('pid', 1, '=')->execute()->fetchAssoc();
    $p_uuid = $value['p_uuid'];

    $edit = array();
    $frontpage = variable_get('site_frontpage', 'node');
    $_bibdk_custom_search_page_menu_title = $edit['page[menu_title]'] = $this->randomName(8);
    $_bibdk_custom_search_page_path = $edit['page[page_path]'] = $frontpage;
    $this->drupalPost('admin/config/search/bibdk_custom_search/' . $p_uuid . '/edit', $edit, 'Save');
    $this->assertFieldByName(
      'page[menu_title]',
      $edit['page[menu_title]'],
      format_string('The page "@page_title" have been assigned a menu title "@val".', array('@page_title' => $_bibdk_custom_search_page_title, '@val' => $edit['page[menu_title]']))
    );
    $this->assertFieldByName(
      'page[page_path]',
      $edit['page[page_path]'],
      format_string('The page "@page_title" have been assigned a path "@val".', array('@page_title' => $_bibdk_custom_search_page_title, '@val' => $edit['page[page_path]']))
    );

    // Test adding an element to a custom search page.
    $value = db_select('bibdk_custom_search_map_elements', 't')->fields('t', array('me_uuid'))->condition('mid', 1, '=')->execute()->fetchAssoc();
    $me_uuid = $value['me_uuid'];
    $edit = array();
    $edit['elements[0][e_uuid]'] = $e_uuid;
    $edit['elements[0][region]'] = 'main';
    $this->drupalPost('admin/config/search/bibdk_custom_search/' . $p_uuid . '/edit', $edit, 'Save');
    $this->assertText($element_title);
    $this->assertLinkByHref(
      'admin/config/search/bibdk_custom_search/elements/' . $e_uuid . '/edit'
    );
    $this->assertLinkByHref(
      'admin/config/search/bibdk_custom_search/' . $p_uuid . '/remove_element/' . $me_uuid
    );

    // Test a custom search page form.
    $this->drupalGet($_bibdk_custom_search_page_path);
    $this->assertFieldByName(
      'search_block_form'
    );
    $this->assertText($element_label, format_string('The element label "@element_label" was found', array('@element_label' => $element_label)));
    $this->assertText($element_description, format_string('The element description "@element_description" was found', array('@element_description' => substr($element_description, 0, 40) . '[...]')));
    $this->assertFieldByName($_bibdk_custom_search_v_uuid);
    $this->assertNoPattern('/<form .*<form .*<\/form/sm', format_string('No nested forms found.'));

  }

  private function _testBibdkCustomSearchDisable() {
    global $_bibdk_custom_search_value_title;
    global $_bibdk_custom_search_page_path;
    global $_bibdk_custom_search_v_uuid;
    global $_bibdk_custom_search_page_menu_title;
    global $_bibdk_custom_search_page_title;

    // Test setting a custom search value to 'disabled'.
    $this->drupalGet('admin/config/search/bibdk_custom_search/values');
    $this->clickLink('edit'); // there's only one value made
    $edit = array();
    $edit['element_value[is_disabled]'] = 1;

    $this->drupalPost(NULL, $edit, 'Save');

    $this->assertFieldChecked('edit-element-value-is-disabled', format_string('The value "@value_title" have been set to "disabled".', array('@value_title' => $_bibdk_custom_search_value_title)));

    $this->drupalGet($_bibdk_custom_search_page_path);
    $this->assertFieldByName(
      'search_block_form'
    );
    $disabled_field = $this->xpath('//input[@id=:id and @disabled="disabled"]', array(':id' => 'edit-' . $_bibdk_custom_search_v_uuid));
    $this->assertTrue($disabled_field, format_string('The value "@value_title" was set to "disabled"', array('@value_title' => $_bibdk_custom_search_value_title)));


    // Test setting a custom search element to 'disabled'.
    // first: enable value
    $this->drupalGet('admin/config/search/bibdk_custom_search/values');
    $this->clickLink('edit'); // there's only one value made
    $edit = array();
    $edit['element_value[is_disabled]'] = FALSE;
    $this->drupalPost(NULL, $edit, 'Save');
    $this->assertNoFieldChecked('edit-element-value-is-disabled', format_string('The value "@value_title" have been set to "enabled".', array('@value_title' => $_bibdk_custom_search_value_title)));

    // disable element
    $this->drupalGet('admin/config/search/bibdk_custom_search/elements');
    $this->clickLink('edit'); // there's only one element made
    $edit = array();
    $edit['bibdk_custom_search_page_element[is_disabled]'] = 1;
    $this->drupalPost(NULL, $edit, 'Save'); //verbose
    $this->assertFieldChecked('edit-bibdk-custom-search-page-element-is-disabled', format_string('The element have been set to "disabled".', array()));

    // assert element is disabled
    $this->drupalGet($_bibdk_custom_search_page_path); //verbose
    $this->assertFieldByName(
      'search_block_form'
    );
    $disabled_field = $this->xpath('//input[@id=:id and @disabled="disabled"]', array(':id' => 'edit-' . $_bibdk_custom_search_v_uuid));
    $this->assertTrue($disabled_field, format_string('The values ("@value_title") in the element was set to "disabled"', array('@value_title' => $_bibdk_custom_search_value_title)));

    // Test setting a custom search page to 'disabled'.
    // first: enable element
    $this->drupalGet('admin/config/search/bibdk_custom_search/elements');
    $this->clickLink('edit'); // there's only one element made
    $edit = array();
    $edit['bibdk_custom_search_page_element[is_disabled]'] = FALSE;
    $this->drupalPost(NULL, $edit, 'Save');
    $this->assertNoFieldChecked('edit-bibdk-custom-search-page-element-is-disabled', format_string('The element have been set to "enabled".', array()));

    $this->drupalGet(''); //verbose
    $this->assertFieldByName('search_block_form');
    $this->assertNoLink($_bibdk_custom_search_page_menu_title, 0, format_string('The page "@page_menu_title" is present in the menu.', array('@page_menu_title' => $_bibdk_custom_search_page_menu_title)));

    // disable page
    $this->drupalGet('admin/config/search/bibdk_custom_search');
    $this->clickLink('edit'); // there's only one page made
    $edit = array();
    $edit['page[is_disabled]'] = TRUE;
    $this->drupalPost(NULL, $edit, 'Save');
    $this->assertFieldChecked('edit-page-is-disabled', format_string('The page "@page_title" have been set to "disabled".', array('@page_title' => $_bibdk_custom_search_page_title)));

    // assert page is disabled
    $this->drupalGet('');
    $this->assertFieldByName('search_block_form');
    $this->assertNoLink($_bibdk_custom_search_page_menu_title, format_string('The disabled page "@page_menu_title" was removed from the menu.', array('@page_menu_title' => $_bibdk_custom_search_page_menu_title)));

    // enable page
    $this->drupalGet('admin/config/search/bibdk_custom_search');
    $this->clickLink('edit'); // there's only one page made
    $edit = array();
    $edit['page[is_disabled]'] = FALSE;
    $this->drupalPost(NULL, $edit, 'Save');
    $this->assertNoFieldChecked('edit-page-is-disabled', format_string('The page "@page_title" have been set to "enabled".', array('@page_title' => $_bibdk_custom_search_page_title)));

  }

  private function _testBibdkCustomSearchResult() {
    global $_bibdk_custom_search_value_title;
    global $_bibdk_custom_search_page_path;
    global $_bibdk_custom_search_v_uuid;
    global $_bibdk_custom_search_page_menu_title;
    global $_bibdk_custom_search_page_title;

    // assert default value in textfield elements
    $this->drupalGet('');
    $this->assertFieldByName('search_block_form');

    $edit = array();
    $edit['search_block_form'] = 'foo';
    $edit[$_bibdk_custom_search_v_uuid] = 'bar';
    $this->drupalPost(NULL, $edit, 'Search');

    // assert that value is present in search result
    $this->assertFieldByName($_bibdk_custom_search_v_uuid);
    $this->assertFieldByName($_bibdk_custom_search_v_uuid, 'bar', 'default value in the custom search field is the search term.');

    // assert default value in checkbox elements
    // first, set a checkbox element
    $this->drupalGet('admin/config/search/bibdk_custom_search/values/' . $_bibdk_custom_search_v_uuid . '/edit');
    $edit = array();
    $edit['element_value[value_type]'] = 'checkboxes';
    $option_label = $edit['element_value_options[0][label]'] = $this->randomName(8);
    $option_value = $edit['element_value_options[0][value]'] = $this->randomName(8);
    $this->drupalPost(NULL, $edit, 'Save');
    $this->assertFieldByName(
      'element_value[value_type]',
      $edit['element_value[value_type]'],
      format_string('The value "@value_title" have been set to a type "@type", with a label "@label".', array('@value_title' => $_bibdk_custom_search_value_title, '@type' => $edit['element_value[value_type]'], '@label' => $option_label))
    );

    $this->drupalGet('');
    $edit = array();
    $edit['search_block_form'] = 'foo';
    $edit[ $_bibdk_custom_search_v_uuid . '[' . $option_label . ']' ] = TRUE;
    $this->drupalPost(NULL, $edit, 'Search');

    // assert that value is present in search result
    $disabled_field = $this->xpath('//input[@value=:value and @checked="checked"]', array(':value' => $option_value, ':value' => $option_value));
    $this->assertTrue($disabled_field, format_string('The option "@option_label" have been checked.', array('@option_label' => $option_label)));

    // assert default value in select elements
    // first, set a select element
    $this->drupalGet('admin/config/search/bibdk_custom_search/values/' . $_bibdk_custom_search_v_uuid . '/edit');
    $edit = array();
    $edit['element_value[value_type]'] = 'select';
    $option_label_0 = $edit['element_value_options[0][label]'] = $this->randomName(8);
    $option_value_0 = $edit['element_value_options[0][value]'] = $this->randomName(8);
    $this->drupalPost(NULL, $edit, 'Save');

    // assert option 1 has been saved
    $this->drupalGet('admin/config/search/bibdk_custom_search/values/' . $_bibdk_custom_search_v_uuid . '/edit');
    $this->assertFieldByName(
      'element_value_options[0][label]',
      $option_label_0,
      format_string('The value "@value_title" have added an option with the label "@label".', array('@value_title' => $_bibdk_custom_search_value_title, '@value' => $option_value_0, '@label' => $option_label_0))
    );
    $this->assertFieldByName(
      'element_value_options[0][value]',
      $option_value_0,
      format_string('The value "@value_title" have added an option with the value "@value".', array('@value_title' => $_bibdk_custom_search_value_title, '@value' => $option_value_0, '@label' => $option_label_0))
    );

    // set a second select element
    $this->drupalGet('admin/config/search/bibdk_custom_search/values/' . $_bibdk_custom_search_v_uuid . '/edit');
    $edit = array();
    $option_label_1 = $edit['element_value_options[1][label]'] = $this->randomName(8);
    $option_value_1 = $edit['element_value_options[1][value]'] = $this->randomName(8);
    $this->drupalPost(NULL, $edit, 'Save');

    // assert option 2 has been saved
    $this->drupalGet('admin/config/search/bibdk_custom_search/values/' . $_bibdk_custom_search_v_uuid . '/edit');
    $this->assertFieldById( // it is now first row
      'edit-element-value-options-0-label',
      $option_label_1,
      format_string('The value "@value_title" have added an option with the label "@label".', array('@value_title' => $_bibdk_custom_search_value_title, '@value' => $option_value_1, '@label' => $option_label_1))
    );
    $this->assertFieldById(
      'edit-element-value-options-0-value',
      $option_value_1,
      format_string('The value "@value_title" have added an option with the value "@value".', array('@value_title' => $_bibdk_custom_search_value_title, '@value' => $option_value_1, '@label' => $option_label_1))
    );

    // select second option and submit search form
    $this->drupalGet('');
    $edit = array();
    $edit['search_block_form'] = 'foo';
    $edit[ $_bibdk_custom_search_v_uuid ] = $option_value_0;
    $this->drupalPost(NULL, $edit, 'Search');

    // assert that second option is selected by default in search result form.
    $this->assertFieldByName(
      $_bibdk_custom_search_v_uuid,
      $option_value_1,
      format_string(
        'The option labeled "@label" with the value "@value" has been selected.',
        array('@value' => $option_value_1, '@label' => $option_label_1)
      )
    );

  }

}
